
/*
Auto-generated by CVXPYgen on August 20, 2023 at 23:19:56.
Content: Declarations for Python binding with pybind11.
*/

// User-defined parameters
struct CPG_Params_cpp_t {
    std::array<double, 2> x_final;
    std::array<double, 2> x_init;
    std::array<double, 4> A;
    std::array<double, 2> B;
};

// Flags for updated user-defined parameters
struct CPG_Updated_cpp_t {
    bool x_final;
    bool x_init;
    bool A;
    bool B;
};

// Primal solution
struct CPG_Prim_cpp_t {
    std::array<double, 22> X;
    std::array<double, 10> U;
};

// Dual solution
struct CPG_Dual_cpp_t {
    std::array<double, 2> d0;
    std::array<double, 2> d1;
    std::array<double, 2> d2;
    std::array<double, 2> d3;
    std::array<double, 2> d4;
    std::array<double, 2> d5;
    std::array<double, 2> d6;
    std::array<double, 2> d7;
    std::array<double, 2> d8;
    std::array<double, 2> d9;
    std::array<double, 2> d10;
    std::array<double, 2> d11;
    std::array<double, 2> d12;
    double d13;
    double d14;
    std::array<double, 2> d15;
    std::array<double, 2> d16;
    double d17;
    double d18;
    std::array<double, 2> d19;
    std::array<double, 2> d20;
    double d21;
    double d22;
    std::array<double, 2> d23;
    std::array<double, 2> d24;
    double d25;
    double d26;
    std::array<double, 2> d27;
    std::array<double, 2> d28;
    double d29;
    double d30;
    std::array<double, 2> d31;
    std::array<double, 2> d32;
    double d33;
    double d34;
    std::array<double, 2> d35;
    std::array<double, 2> d36;
    double d37;
    double d38;
    std::array<double, 2> d39;
    std::array<double, 2> d40;
    double d41;
    double d42;
    std::array<double, 2> d43;
    std::array<double, 2> d44;
    double d45;
    double d46;
    std::array<double, 2> d47;
    std::array<double, 2> d48;
    double d49;
    double d50;
};

// Solver information
struct CPG_Info_cpp_t {
    double obj_val;
    int iter;
    char* status;
    double pri_res;
    double dua_res;
    double time;
};

// Solution and solver information
struct CPG_Result_cpp_t {
    CPG_Prim_cpp_t prim;
    CPG_Dual_cpp_t dual;
    CPG_Info_cpp_t info;
};

// Main solve function
CPG_Result_cpp_t solve_cpp(struct CPG_Updated_cpp_t& CPG_Updated_cpp, struct CPG_Params_cpp_t& CPG_Params_cpp);
