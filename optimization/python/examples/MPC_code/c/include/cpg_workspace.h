
/*
Auto-generated by CVXPYgen on July 18, 2023 at 14:40:23.
Content: Type definitions and variable declarations.
*/

#include "types.h"

#ifndef CPG_TYPES_H
# define CPG_TYPES_H

// Canonical parameters
typedef struct {
  csc        *P;         // Canonical parameter P
  c_float    *q;         // Canonical parameter q
  c_float    d;          // Canonical parameter d
  csc        *A;         // Canonical parameter A
  c_float    *l;         // Canonical parameter l
  c_float    *u;         // Canonical parameter u
} Canon_Params_t;

// Flags indicating outdated canonical parameters
typedef struct {
  int        P;          // Bool, if canonical parameter P outdated
  int        q;          // Bool, if canonical parameter q outdated
  int        d;          // Bool, if canonical parameter d outdated
  int        A;          // Bool, if canonical parameter A outdated
  int        l;          // Bool, if canonical parameter l outdated
  int        u;          // Bool, if canonical parameter u outdated
} Canon_Outdated_t;

// Primal solution
typedef struct {
  c_float    *X;         // Your variable X
  c_float    *U;         // Your variable U
} CPG_Prim_t;

// Dual solution
typedef struct {
  c_float    *d0;        // Your dual variable for constraint d0
  c_float    *d1;        // Your dual variable for constraint d1
  c_float    *d2;        // Your dual variable for constraint d2
} CPG_Dual_t;

// Solver information
typedef struct {
  c_float    obj_val;    // Objective function value
  c_int      iter;       // Number of iterations
  char       *status;    // Solver status
  c_float    pri_res;    // Primal residual
  c_float    dua_res;    // Dual residual
} CPG_Info_t;

// Solution and solver information
typedef struct {
  CPG_Prim_t *prim;      // Primal solution
  CPG_Dual_t *dual;      // Dual solution
  CPG_Info_t *info;      // Solver info
} CPG_Result_t;

#endif // ifndef CPG_TYPES_H

// Vector containing flattened user-defined parameters
extern c_float cpg_params_vec[142];

// Sparse mappings from user-defined to canonical parameters
extern csc canon_A_map;
extern csc canon_l_map;
extern csc canon_u_map;

// Canonical parameters
extern csc canon_P;
extern c_float canon_q[222];
extern csc canon_A;
extern c_float canon_l[252];
extern c_float canon_u[252];

// Struct containing canonical parameters
extern Canon_Params_t Canon_Params;

// Struct containing flags for outdated canonical parameters
extern Canon_Outdated_t Canon_Outdated;

// Struct containing primal solution
extern CPG_Prim_t CPG_Prim;

// Struct containing dual solution
extern CPG_Dual_t CPG_Dual;

// Struct containing solver info
extern CPG_Info_t CPG_Info;

// Struct containing solution and info
extern CPG_Result_t CPG_Result;
